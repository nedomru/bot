import logging

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from tgbot.keyboards.user.inline import to_home
from tgbot.keyboards.user.salary import salary_count_type, salary_user_position, salary_user_aht, salary_user_flr, \
    salary_user_gok, salary_user_rate, salary_user_tests, salary_user_acknowledgments, salary_user_mentor, \
    salary_user_mentor_type, salary_user_mentoring_days
from tgbot.misc.states import SalaryCountStates
from tgbot.misc.salary import salary_with_percents

user_salary_router = Router()


@user_salary_router.callback_query(F.data == "usermenu_salary")
async def start_count_salary(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    await callback.answer()
    await state.set_state(SalaryCountStates.COUNT_TYPE)

    await callback.message.edit_text("üí∏ <b>–ù–µ –î–æ–º.—Ä—É | –†–∞—Å—á–µ—Ç –ó–ü</b>\n\n"
                                     "–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å—á–∏—Ç–∞—Ç—å —Å–≤–æ–∏ –¥–µ–Ω–µ–∂–∫–∏\n\n"
                                     "–î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ —Ç–∏–ø —Ä–∞—Å—á–µ—Ç–∞:\n"
                                     "üìä –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ - —Ä—É—á–Ω–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π\n"
                                     "üåü –û–±—â. –ø—Ä–æ—Ü–µ–Ω—Ç - –≤–≤–æ–¥ –∏—Ç–æ–≥–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –ø—Ä–µ–º–∏–∏ <i>(—ç—Ç–æ –±—ã—Å—Ç—Ä–µ–µ)</i>",
                                     reply_markup=salary_count_type())


@user_salary_router.callback_query(F.data.contains("usermenu_salary_type"))
@user_salary_router.message(SalaryCountStates.COUNT_TYPE)
async def process_salary_type(callback: CallbackQuery, state: FSMContext) -> None:
    await callback.answer()
    count_type = callback.data.split("_")[-1]
    await state.update_data(COUNT_TYPE=count_type)

    await state.set_state(SalaryCountStates.POSITION)
    if count_type == "sum":
        await callback.message.edit_text("üí∏ <b>–ù–µ –î–æ–º.—Ä—É | –†–∞—Å—á–µ—Ç –ó–ü</b>\n\n"
                                         "–•–æ—Ä–æ—à–æ, —Å—á–∏—Ç–∞–µ–º –ø–æ –æ–±—â–µ–º—É –ø—Ä–æ—Ü–µ–Ω—Ç—É –ø—Ä–µ–º–∏–∏\n\n"
                                         "üíº –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –Ω–∏–∂–µ —Ç–≤–æ—é –¥–æ–ª–∂–Ω–æ—Å—Ç—å", reply_markup=salary_user_position())
    else:
        await callback.message.edit_text("üí∏ <b>–ù–µ –î–æ–º.—Ä—É | –†–∞—Å—á–µ—Ç –ó–ü</b>\n\n"
                                         "–•–æ—Ä–æ—à–æ, —Å—á–∏—Ç–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –∫–∞–∂–¥–æ–≥–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ\n\n"
                                         "üíº –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –Ω–∏–∂–µ —Ç–≤–æ—é –¥–æ–ª–∂–Ω–æ—Å—Ç—å", reply_markup=salary_user_position())


@user_salary_router.callback_query(F.data.contains("position"))
@user_salary_router.message(SalaryCountStates.POSITION)
async def process_position(callback: CallbackQuery, state: FSMContext) -> None:
    await callback.answer()
    await state.update_data(POSITION=callback.data.split("_")[-1])

    await state.set_state(SalaryCountStates.HOURS_WORKED)
    bot_message = await callback.message.edit_text(
        "üí∏ <b>–ù–µ –î–æ–º.—Ä—É | –†–∞—Å—á–µ—Ç –ó–ü</b>\n\n"
        "–°—É–ø–µ—Ä, –¥–æ–ª–∂–Ω–æ—Å—Ç—å –≤—ã–±—Ä–∞–Ω–∞!\n\n"
        "‚è≥ –í–≤–µ–¥–∏ –≤ —á–∞—Ç –∫–æ–ª-–≤–æ –æ—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —á–∞—Å–æ–≤ –∑–∞ –º–µ—Å—è—Ü\n\n"
        "–ß–∞—Å—ã –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ WFM\n"
        "<i><a href='https://i.imgur.com/qcE9TQA.png'>–ü—Ä–∏–º–µ—Ä –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ</a></i>",
        reply_markup=to_home(),
        disable_web_page_preview=True)
    await state.update_data(LAST_BOT_MESSAGE_ID=bot_message.message_id)


@user_salary_router.message(SalaryCountStates.HOURS_WORKED)
async def process_hours_worked(message: Message, state: FSMContext) -> None:
    await state.update_data(HOURS_WORKED=message.text)
    user_data = await state.get_data()

    await message.delete()

    # –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –µ–≥–æ
    bot_message = await message.bot.edit_message_text(
        chat_id=message.chat.id,
        message_id=user_data["LAST_BOT_MESSAGE_ID"],
        text="üí∏ <b>–ù–µ –î–æ–º.—Ä—É | –†–∞—Å—á–µ—Ç –ó–ü</b>\n\n"
             "–ö–æ–ª-–≤–æ —á–∞—Å–æ–≤ –∑–∞–ø–æ–º–Ω–∏–ª, –¥–∞–≤–∞–π –ø—Ä–æ–¥–æ–ª–∂–∏–º\n\n" +
             ("üåü –í–≤–µ–¥–∏ –æ–±—â–∏–π <b>–ø—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–µ–º–∏–∏</b>" if user_data[
                                                           "COUNT_TYPE"] == "sum" else "üöÄ –í—ã–±–µ—Ä–∏ –ø—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–µ–º–∏–∏ –∑–∞ <b>–ª–∏—á–Ω—É—é —Ü–µ–ª—å</b>\n\n"
                                                                                       "–ù–∞–π—Ç–∏ –µ–≥–æ –º–æ–∂–Ω–æ –≤ –ü—Ä–µ–º–∏—É–º–µ\n"
                                                                                       "<i><a href='https://i.imgur.com/L62rmBK.png'>–ü—Ä–∏–º–µ—Ä –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ</a></i>"),
        reply_markup=to_home() if user_data["COUNT_TYPE"] == "sum" else salary_user_aht(),
        disable_web_page_preview=True
    )
    await state.update_data(LAST_BOT_MESSAGE_ID=bot_message.message_id)

    await state.set_state(
        SalaryCountStates.PREMIUM_PERCENT if user_data["COUNT_TYPE"] == "sum" else SalaryCountStates.AHT)


@user_salary_router.message(SalaryCountStates.PREMIUM_PERCENT)
async def process_premium_percent(message: Message, state: FSMContext) -> None:
    await state.update_data(PREMIUM_PERCENT=message.text)
    user_data = await state.get_data()

    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await message.delete()

    if user_data["COUNT_TYPE"] == "sum":
        rate = None
        position_name = None
        match user_data["POSITION"]:
            case "nck1":
                rate = 156.7
                position_name = "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ù–¶–ö1"
            case "nck1leading":
                rate = 164, 2
                position_name = "–í–µ–¥—É—â–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ù–¶–ö1"
            case "nck2":
                rate = 181
                position_name = "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ù–¶–ö2"
            case "nck2":
                rate = 195.9
                position_name = "–í–µ–¥—É—â–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ù–¶–ö2"

        # –ï—Å–ª–∏ –±—ã–ª –≤—ã–±—Ä–∞–Ω –æ–±—â–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–µ–º–∏–∏, –¥–µ–ª–∞–µ–º —Ä–∞—Å—á–µ—Ç
        salary = await salary_with_percents(
            hourly_payment=rate,
            hours_worked=int(user_data["HOURS_WORKED"]),
            premium_percent=int(user_data["PREMIUM_PERCENT"]),
        )

        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
        await message.bot.edit_message_text(
            chat_id=message.chat.id,
            message_id=user_data["LAST_BOT_MESSAGE_ID"],
            text=f"""üí∏ <b>–ù–µ –î–æ–º.—Ä—É | –†–∞—Å—á–µ—Ç –ó–ü</b>

<b>–ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏</b>
üíº <b>–î–æ–ª–∂–Ω–æ—Å—Ç—å</b>: {position_name}
üïñ <b>–ß–¢–°</b>: {rate} —Ä—É–±/—á–∞—Å
‚è≥ <b>–û—Ç—Ä–∞–±–æ—Ç–∞–Ω–æ</b>: {user_data["HOURS_WORKED"]} —á–∞—Å–æ–≤
üåü <b>–ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–µ–º–∏–∏</b>: {user_data["PREMIUM_PERCENT"]}%

<b>–ó–∞—Ä–ø–ª–∞—Ç–∞</b>
–û–∫–ª–∞–¥ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç <b>{salary["hours_salary"]}</b> —Ä—É–±
–ü—Ä–µ–º–∏—è —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç <b>{salary["premium_salary"]}</b> —Ä—É–±

–û–±—â–∞—è —Å—É–º–º–∞ –ø–æ—Å–ª–µ –≤—ã—á–µ—Ç–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç <b>{salary["salary_sum"]}</b> —Ä—É–±

<blockquote expandable>
<b>–í–∞–∂–Ω–æ:</b>
1. –í —Ä–∞—Å—á–µ—Ç –±–µ—Ä–µ—Ç—Å—è —á–∞—Å–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞ –ø–æ –ü–µ—Ä–º–∏
2. –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Ä–µ–≥–∏–æ–Ω–∞ –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è
3. –ù–∞–ª–æ–≥–∏ –Ω–µ —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è
4. –Ø –ø–æ–∫–∞ –Ω–µ —É–º–µ—é —Å—á–∏—Ç–∞—Ç—å –Ω–æ—á–Ω—ã–µ –∏ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ —á–∞—Å—ã

–†–∞–∑–Ω–∏—Ü–∞ –≤ –ß–¢–° –Ω–∏–≤–µ–ª–∏—Ä—É–µ—Ç —Ä–∞–∑–Ω–∏—Ü—É –≤ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–µ —Ä–µ–≥–∏–æ–Ω–æ–≤
–ö–æ—ç—Ñ–∏—Ü–∏–µ–Ω—Ç —Ä–µ–≥–∏–æ–Ω–∞ –Ω–∏–≤–µ–ª–∏—Ä—É–µ—Ç—Å—è –Ω–∞–ª–æ–≥–∞–º–∏</blockquote>""",
            reply_markup=to_home()
        )
        await state.clear()
    else:
        await state.set_state(SalaryCountStates.AHT)
        # –ï—Å–ª–∏ –±—ã–ª –≤—ã–±—Ä–∞–Ω —Ä–∞—Å—á–µ—Ç —á–µ—Ä–µ–∑ AHT, —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∂–¥–µ–º –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        await message.bot.edit_message_text(
            chat_id=message.chat.id,
            message_id=user_data["LAST_BOT_MESSAGE_ID"],
            text="üí∏ <b>–ù–µ –î–æ–º.—Ä—É | –†–∞—Å—á–µ—Ç –ó–ü</b>\n\n"
                 "üöÄ –í—ã–±–µ—Ä–∏ –ø—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–µ–º–∏–∏ –∑–∞ <b>–ª–∏—á–Ω—É—é —Ü–µ–ª—å</b>\n\n"
                 "–ù–∞–π—Ç–∏ –µ–≥–æ –º–æ–∂–Ω–æ –≤ –ü—Ä–µ–º–∏—É–º–µ\n"
                 "<i><a href='https://i.imgur.com/L62rmBK.png'>–ü—Ä–∏–º–µ—Ä –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ</a></i>",
            reply_markup=salary_user_aht(),
            disable_web_page_preview=True
        )


@user_salary_router.callback_query(F.data.contains("aht"))
@user_salary_router.message(SalaryCountStates.AHT)
async def process_aht(callback: CallbackQuery, state: FSMContext) -> None:
    await callback.answer()
    await state.update_data(AHT=callback.data.split("_")[-1])

    await state.set_state(SalaryCountStates.FLR)
    await callback.message.edit_text(
        "üí∏ <b>–ù–µ –î–æ–º.—Ä—É | –†–∞—Å—á–µ—Ç –ó–ü</b>\n\n"
        "üëΩ –í—ã–±–µ—Ä–∏ –ø—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–µ–º–∏–∏ –∑–∞ <b>FLR</b>\n\n"
        "–ù–∞–π—Ç–∏ –µ–≥–æ –º–æ–∂–Ω–æ –≤ –ü—Ä–µ–º–∏—É–º–µ\n"
        "<i><a href='https://i.imgur.com/lsEEoni.png'>–ü—Ä–∏–º–µ—Ä –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ</a></i>",
        reply_markup=salary_user_flr(),
        disable_web_page_preview=True
    )


@user_salary_router.callback_query(F.data.contains("flr"))
@user_salary_router.message(SalaryCountStates.FLR)
async def process_flr(callback: CallbackQuery, state: FSMContext) -> None:
    await callback.answer()
    await state.update_data(FLR=callback.data.split("_")[-1])

    await state.set_state(SalaryCountStates.GOK)
    await callback.message.edit_text(
        "üí∏ <b>–ù–µ –î–æ–º.—Ä—É | –†–∞—Å—á–µ—Ç –ó–ü</b>\n\n"
        "ü§¢ –í—ã–±–µ—Ä–∏ –ø—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–µ–º–∏–∏ –∑–∞ <b>–ì–û–ö</b>\n\n"
        "–ù–∞–π—Ç–∏ –µ–≥–æ –º–æ–∂–Ω–æ –≤ –ü—Ä–µ–º–∏—É–º–µ\n"
        "<i><a href='https://i.imgur.com/S6cOdVK.png'>–ü—Ä–∏–º–µ—Ä –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ</a></i>",
        reply_markup=salary_user_gok(),
        disable_web_page_preview=True
    )


@user_salary_router.callback_query(F.data.contains("gok"))
@user_salary_router.message(SalaryCountStates.GOK)
async def process_gok(callback: CallbackQuery, state: FSMContext) -> None:
    await callback.answer()
    await state.update_data(GOK=callback.data.split("_")[-1])

    await state.set_state(SalaryCountStates.CLIENT_RATING)
    await callback.message.edit_text(
        "üí∏ <b>–ù–µ –î–æ–º.—Ä—É | –†–∞—Å—á–µ—Ç –ó–ü</b>\n\n"
        "‚≠ê –í—ã–±–µ—Ä–∏ –ø—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–µ–º–∏–∏ –∑–∞ <b>–æ—Ü–µ–Ω–∫—É –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞</b>\n\n"
        "–ù–∞–π—Ç–∏ –µ–≥–æ –º–æ–∂–Ω–æ –≤ –ü—Ä–µ–º–∏—É–º–µ\n"
        "<i><a href='https://i.imgur.com/LBKoWz8.png'>–ü—Ä–∏–º–µ—Ä –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ</a></i>",
        reply_markup=salary_user_rate(),
        disable_web_page_preview=True
    )


@user_salary_router.callback_query(F.data.contains("rate"))
@user_salary_router.message(SalaryCountStates.CLIENT_RATING)
async def process_rate(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.update_data(CLIENT_RATING=callback.data.split("_")[-1])

    await state.set_state(SalaryCountStates.TESTS)
    await callback.message.edit_text(
        "üí∏ <b>–ù–µ –î–æ–º.—Ä—É | –†–∞—Å—á–µ—Ç –ó–ü</b>\n\n"
        "üß™ –ü—Ä–æ—à–µ–ª –ª–∏ —Ç—ã –≤—Å–µ <b>–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã</b>\n\n"
        "–ù–∞–π—Ç–∏ —Ç–µ—Å—Ç—ã –º–æ–∂–Ω–æ <a href='https://okc.ertelecom.ru/stats/testing/lk/profile'>—Ç—É—Ç</a>\n",
        reply_markup=salary_user_tests(),
    )


@user_salary_router.callback_query(F.data.contains("tests"))
@user_salary_router.message(SalaryCountStates.TESTS)
async def process_tests(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.update_data(TESTS=callback.data.split("_")[-1])

    await state.set_state(SalaryCountStates.ACKNOWLEDGMENTS)
    await callback.message.edit_text(
        "üí∏ <b>–ù–µ –î–æ–º.—Ä—É | –†–∞—Å—á–µ—Ç –ó–ü</b>\n\n"
        "üôèüèª –í—ã–±–µ—Ä–∏ –ø—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–µ–º–∏–∏ –∑–∞ <b>–±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏</b>\n\n"
        "1 –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å - 3% –ø—Ä–µ–º–∏–∏\n"
        "–ú–∞–∫—Å–∏–º—É–º –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–µ–π –≤ –º–µ—Å—è—Ü - 2\n\n"
        "–ù–∞–π—Ç–∏ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –º–æ–∂–Ω–æ <a href='https://okc.ertelecom.ru/stats/thanks-appl/view/index'>—Ç—É—Ç</a>\n",
        reply_markup=salary_user_acknowledgments(),
    )


@user_salary_router.callback_query(F.data.contains("acknowledgments"))
@user_salary_router.message(SalaryCountStates.ACKNOWLEDGMENTS)
async def process_acknowledgments(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.update_data(ACKNOWLEDGMENTS=callback.data.split("_")[-1])

    await state.set_state(SalaryCountStates.MENTOR)
    await callback.message.edit_text(
        "üí∏ <b>–ù–µ –î–æ–º.—Ä—É | –†–∞—Å—á–µ—Ç –ó–ü</b>\n\n"
        "üéì –¢—ã <b>–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫</b>?\n",
        reply_markup=salary_user_mentor(),
    )


@user_salary_router.callback_query(F.data.startswith("mentor"))
@user_salary_router.message(SalaryCountStates.MENTOR)
async def process_mentoring(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.update_data(MENTOR=callback.data.split("_")[-1])

    if callback.data.split("_")[-1] == "yes":
        await state.set_state(SalaryCountStates.MENTOR_TYPE)
        await callback.message.edit_text(
            "üí∏ <b>–ù–µ –î–æ–º.—Ä—É | –†–∞—Å—á–µ—Ç –ó–ü</b>\n\n"
            "üéì –í—ã–±–µ—Ä–∏ —Ç–∏–ø –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–∞",
            reply_markup=salary_user_mentor_type(),
        )
    else:
        user_data = await state.get_data()

        rate = None
        position_name = None
        match user_data["POSITION"]:
            case "nck1":
                rate = 156.7
                position_name = "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ù–¶–ö1"
            case "nck1leading":
                rate = 164, 2
                position_name = "–í–µ–¥—É—â–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ù–¶–ö1"
            case "nck2":
                rate = 181
                position_name = "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ù–¶–ö2"
            case "nck2":
                rate = 195.9
                position_name = "–í–µ–¥—É—â–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ù–¶–ö2"

        salary = await salary_with_percents(
            hourly_payment=rate,
            hours_worked=int(user_data["HOURS_WORKED"]),
            aht=int(user_data["AHT"]),
            flr=int(user_data["FLR"]),
            gok=int(user_data["GOK"]),
            client_rating=int(user_data["CLIENT_RATING"]),
            tests=user_data["TESTS"],
            acknowledgments=int(user_data["ACKNOWLEDGMENTS"]),
        )

        message = f"""üí∏ <b>–ù–µ –î–æ–º.—Ä—É | –†–∞—Å—á–µ—Ç –ó–ü</b>

<b>–ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏</b>
üíº <b>–î–æ–ª–∂–Ω–æ—Å—Ç—å</b>: {position_name}
üïñ <b>–ß–¢–°</b>: {rate} —Ä—É–±/—á–∞—Å
‚è≥ <b>–û—Ç—Ä–∞–±–æ—Ç–∞–Ω–æ</b>: {user_data["HOURS_WORKED"]} —á–∞—Å–æ–≤
üöÄ <b>–õ–∏—á–Ω–∞—è —Ü–µ–ª—å</b>: {user_data["AHT"]}%
üëΩ <b>FLR</b>: {user_data["FLR"]}%
ü§¢ <b>–ì–û–ö</b>: {user_data["GOK"]}%
‚≠ê <b>–û—Ü–µ–Ω–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞</b>: {user_data["CLIENT_RATING"]}%
üß™ <b>–¢–µ—Å—Ç—ã</b>: {'–ü—Ä–æ–π–¥–µ–Ω—ã' if user_data["TESTS"] == "yes" else "–ù–µ –ø—Ä–æ–π–¥–µ–Ω—ã"}
üôèüèª <b>–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏</b>: {user_data["ACKNOWLEDGMENTS"]}%
üéì <b>–ù–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–æ</b>: –ù–µ—Ç

<b>–ó–∞—Ä–ø–ª–∞—Ç–∞</b>
–û–∫–ª–∞–¥ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç <b>{salary["hours_salary"]}</b> —Ä—É–±
–ü—Ä–µ–º–∏—è —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç <b>{salary["premium_salary"]}</b> —Ä—É–±

–û–±—â–∞—è —Å—É–º–º–∞ –ø–æ—Å–ª–µ –≤—ã—á–µ—Ç–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç <b>{salary["salary_sum"]}</b> —Ä—É–±

<blockquote expandable>
<b>–í–∞–∂–Ω–æ:</b>
1. –í —Ä–∞—Å—á–µ—Ç –±–µ—Ä–µ—Ç—Å—è —á–∞—Å–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞ –ø–æ –ü–µ—Ä–º–∏
2. –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Ä–µ–≥–∏–æ–Ω–∞ –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è
3. –ù–∞–ª–æ–≥–∏ –Ω–µ —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è
4. –Ø –ø–æ–∫–∞ –Ω–µ —É–º–µ—é —Å—á–∏—Ç–∞—Ç—å –Ω–æ—á–Ω—ã–µ –∏ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ —á–∞—Å—ã

–†–∞–∑–Ω–∏—Ü–∞ –≤ –ß–¢–° –Ω–∏–≤–µ–ª–∏—Ä—É–µ—Ç —Ä–∞–∑–Ω–∏—Ü—É –≤ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–µ —Ä–µ–≥–∏–æ–Ω–æ–≤
–ö–æ—ç—Ñ–∏—Ü–∏–µ–Ω—Ç —Ä–µ–≥–∏–æ–Ω–∞ –Ω–∏–≤–µ–ª–∏—Ä—É–µ—Ç—Å—è –Ω–∞–ª–æ–≥–∞–º–∏</blockquote>"""

        await callback.message.edit_text(message, reply_markup=to_home())
        await state.clear()


@user_salary_router.callback_query(F.data.contains("typementor"))
@user_salary_router.message(SalaryCountStates.MENTOR_TYPE)
async def process_mentoring_type(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.update_data(MENTOR_TYPE=callback.data.split("_")[-1])

    await state.set_state(SalaryCountStates.MENTOR_DAYS)
    await callback.message.edit_text(
        "üéì –í—ã–±–µ—Ä–∏ –∫–æ–ª-–≤–æ –¥–Ω–µ–π –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–∞ –≤ –º–µ—Å—è—Ü–µ",
        reply_markup=salary_user_mentoring_days(),
    )


@user_salary_router.callback_query(F.data.contains("daysmentoring"))
@user_salary_router.message(SalaryCountStates.MENTOR_DAYS)
async def process_mentoring_days(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.update_data(MENTOR_DAYS=callback.data.split("_")[-1])
    user_data = await state.get_data()

    rate = None
    position_name = None
    match user_data["POSITION"]:
        case "nck1":
            rate = 156.7
            position_name = "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ù–¶–ö1"
        case "nck1leading":
            rate = 164, 2
            position_name = "–í–µ–¥—É—â–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ù–¶–ö1"
        case "nck2":
            rate = 181
            position_name = "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ù–¶–ö2"
        case "nck2":
            rate = 195.9
            position_name = "–í–µ–¥—É—â–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ù–¶–ö2"

    salary = await salary_with_percents(
        hourly_payment=rate,
        hours_worked=int(user_data["HOURS_WORKED"]),
        aht=int(user_data["AHT"]),
        flr=int(user_data["FLR"]),
        gok=int(user_data["GOK"]),
        client_rating=int(user_data["CLIENT_RATING"]),
        tests=user_data["TESTS"],
        acknowledgments=int(user_data["ACKNOWLEDGMENTS"]),
        mentoring_type=user_data["MENTOR_TYPE"],
        mentoring_days=int(user_data["MENTOR_DAYS"]),
    )

    if user_data["MENTOR_TYPE"] == "3d":
        mentor_type = "3D"
    elif user_data["MENTOR_TYPE"] == "main":
        mentor_type = "–û—Å–Ω–æ–≤–Ω–æ–π"
    else:
        mentor_type = "–û–±—â–∏–π"

    message = f"""üí∏ <b>–ù–µ –î–æ–º.—Ä—É | –†–∞—Å—á–µ—Ç –ó–ü</b>

<b>–ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏</b>
üíº <b>–î–æ–ª–∂–Ω–æ—Å—Ç—å</b>: {position_name}
üïñ <b>–ß–¢–°</b>: {rate} —Ä—É–±/—á–∞—Å
‚è≥ <b>–û—Ç—Ä–∞–±–æ—Ç–∞–Ω–æ</b>: {user_data["HOURS_WORKED"]} —á–∞—Å–æ–≤
üöÄ <b>AHT</b>: {user_data["AHT"]}%
üëΩ <b>FLR</b>: {user_data["FLR"]}%
ü§¢ <b>–ì–û–ö</b>: {user_data["GOK"]}%
‚≠ê <b>–û—Ü–µ–Ω–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞</b>: {user_data["CLIENT_RATING"]}%
üß™ <b>–¢–µ—Å—Ç—ã</b>: {'–ü—Ä–æ–π–¥–µ–Ω—ã' if user_data["TESTS"] == "yes" else "–ù–µ –ø—Ä–æ–π–¥–µ–Ω—ã"}
üôèüèª <b>–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏</b>: {user_data["ACKNOWLEDGMENTS"]}%
üéì <b>–ù–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–æ</b>: {mentor_type}, {user_data["MENTOR_DAYS"]} –¥–Ω–µ–π

<b>–ó–∞—Ä–ø–ª–∞—Ç–∞</b>
–û–∫–ª–∞–¥ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç <b>{salary["hours_salary"]}</b> —Ä—É–±
–ü—Ä–µ–º–∏—è —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç <b>{salary["premium_salary"]}</b> —Ä—É–±

–û–±—â–∞—è —Å—É–º–º–∞ –ø–æ—Å–ª–µ –≤—ã—á–µ—Ç–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç <b>{salary["salary_sum"]}</b> —Ä—É–±

<blockquote expandable>
<b>–í–∞–∂–Ω–æ:</b>
1. –í —Ä–∞—Å—á–µ—Ç –±–µ—Ä–µ—Ç—Å—è —á–∞—Å–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞ –ø–æ –ü–µ—Ä–º–∏
2. –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Ä–µ–≥–∏–æ–Ω–∞ –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è
3. –ù–∞–ª–æ–≥–∏ –Ω–µ —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è
4. –Ø –ø–æ–∫–∞ –Ω–µ —É–º–µ—é —Å—á–∏—Ç–∞—Ç—å –Ω–æ—á–Ω—ã–µ –∏ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ —á–∞—Å—ã

–†–∞–∑–Ω–∏—Ü–∞ –≤ –ß–¢–° –Ω–∏–≤–µ–ª–∏—Ä—É–µ—Ç —Ä–∞–∑–Ω–∏—Ü—É –≤ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–µ —Ä–µ–≥–∏–æ–Ω–æ–≤
–ö–æ—ç—Ñ–∏—Ü–∏–µ–Ω—Ç —Ä–µ–≥–∏–æ–Ω–∞ –Ω–∏–≤–µ–ª–∏—Ä—É–µ—Ç—Å—è –Ω–∞–ª–æ–≥–∞–º–∏</blockquote>"""
    await callback.message.edit_text(message, reply_markup=to_home())
    await state.clear()


@user_salary_router.callback_query(F.data == "purchases_sales")
async def my_orders(callback: CallbackQuery):
    await callback.answer()
    await callback.message.edit_text("–í—ã –æ—Ç–∫—Ä—ã–ª–∏ –≤–∞—à–∏ —á–∞—Å–∏–∫–∏!")
